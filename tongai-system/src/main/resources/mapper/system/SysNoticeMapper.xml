<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tawl.system.mapper.SysNoticeMapper">

    <resultMap type="SysNotice" id="SysNoticeResult">
        <result property="noticeId"       column="notice_id"       />
        <result property="noticeTitle"    column="notice_title"    />
        <result property="noticeType"     column="notice_type"     />
        <result property="noticeContent"  column="notice_content"  />
        <result property="weight"         column="weight"          />
        <result property="publishTime"    column="publish_time"    />
        <result property="status"         column="status"          />
        <result property="createBy"       column="create_by"       />
        <result property="createTime"     column="create_time"     />
        <result property="updateBy"       column="update_by"       />
        <result property="updateTime"     column="update_time"     />
        <result property="remark"         column="remark"          />
    </resultMap>

    <sql id="selectNoticeVo">
        select notice_id, notice_title, notice_type, cast(notice_content as char) as notice_content, status,
               user_ids, create_by, create_time, update_by, update_time, remark, publish_time,weight,
               (SELECT count(1)
                FROM sys_notice_read
                WHERE receiver_id = #{receiverId} AND sys_notice_read.notice_id = sys_notice.notice_id  and
                    sys_notice_read.is_read = '1') AS isRead
		from sys_notice
    </sql>

    <sql id="selectReadNoticeVo">
        select n.notice_id, n.notice_title, n.notice_type, cast(n.notice_content as char) as notice_content, n.status,
               n.user_ids, n.create_by, n.create_time, n.update_by, n.update_time, n.remark,n.publish_time,n.weight,
               (SELECT count(1)
                FROM sys_notice_read
                WHERE receiver_id = #{receiverId} AND sys_notice_read.notice_id = n.notice_id  and
                    sys_notice_read.is_read = '1') AS isRead
		from sys_notice n
        LEFT JOIN sys_notice_read nr ON nr.notice_id = n.notice_id
    </sql>

    <select id="selectNoticeById" parameterType="Long" resultMap="SysNoticeResult">
        <include refid="selectNoticeVo"/>
        where notice_id = #{noticeId}
    </select>

    <select id="selectNoticeList" parameterType="SysNotice" resultMap="SysNoticeResult">
        <include refid="selectNoticeVo"/>
        <where>
			<if test="noticeTitle != null and noticeTitle != ''">
				AND notice_title like concat('%', #{noticeTitle}, '%')
			</if>
			<if test="noticeType != null and noticeType != ''">
				AND notice_type = #{noticeType}
			</if>
			<if test="createBy != null and createBy != ''">
				AND create_by like concat('%', #{createBy}, '%')
			</if>
			<if test="status != null and status != ''">
				AND status = #{status}
			</if>
        </where>
        order by status, weight desc, create_time desc
    </select>

    <select id="selectReadNoticeList" parameterType="SysNotice" resultMap="SysNoticeResult">
        <include refid="selectReadNoticeVo"/>
        <where>
            n.user_ids != '0' and nr.receiver_id = #{receiverId} AND n.status = '1'
			<if test="noticeTitle != null and noticeTitle != ''">
				AND n.notice_title like concat('%', #{noticeTitle}, '%')
			</if>
			<if test="noticeType != null and noticeType != ''">
				AND n.notice_type = #{noticeType}
			</if>
			<if test="createBy != null and createBy != ''">
				AND n.create_by like concat('%', #{createBy}, '%')
			</if>
		</where>
        UNION
        <include refid="selectNoticeVo"/>
        <where>
            user_ids = '0' and status = '1'
            <if test="noticeTitle != null and noticeTitle != ''">
                AND notice_title like concat('%', #{noticeTitle}, '%')
            </if>
            <if test="noticeType != null and noticeType != ''">
                AND notice_type = #{noticeType}
            </if>
            <if test="createBy != null and createBy != ''">
                AND create_by like concat('%', #{createBy}, '%')
            </if>
        </where>
        order by weight desc, publish_time desc
    </select>

    <select id="selectUnReadList" parameterType="SysNotice" resultMap="SysNoticeResult">
        SELECT n.*,
        (SELECT count(1) FROM sys_notice_read WHERE receiver_id = #{receiverId}
        AND sys_notice_read.notice_id = n.notice_id and sys_notice_read.is_read = '1') AS isRead
        FROM sys_notice n
        <where>
            n.status = '1'
            <if test="noticeTitle != null and noticeTitle != ''">
                AND notice_title like concat('%', #{noticeTitle}, '%')
            </if>
            <if test="noticeType != null and noticeType != ''">
                AND notice_type = #{noticeType}
            </if>
            <if test="createBy != null and createBy != ''">
                AND create_by like concat('%', #{createBy}, '%')
            </if>
        </where>
        and NOT EXISTS
            (SELECT 1 FROM sys_notice_read nr
                      WHERE nr.notice_id = n.notice_id AND nr.receiver_id = #{receiverId} AND nr.is_read = '1'
             )
          AND
            (n.user_ids = '0' OR EXISTS
                (SELECT 1 FROM sys_notice_read nr WHERE nr.receiver_id = #{receiverId} AND nr.is_read = '0')
            )

        ORDER BY n.weight DESC, n.publish_time DESC
    </select>

    <insert id="insertNotice" useGeneratedKeys="true" keyProperty="noticeId" parameterType="SysNotice">
        insert into sys_notice (
			<if test="noticeTitle != null and noticeTitle != '' ">notice_title, </if>
			<if test="noticeType != null and noticeType != '' ">notice_type, </if>
			<if test="noticeContent != null and noticeContent != '' ">notice_content, </if>
			<if test="status != null and status != '' ">status, </if>
			<if test="userIds != null and userIds != '' ">user_ids, </if>
			<if test="remark != null and remark != ''">remark,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			create_time
 		)values(
			<if test="noticeTitle != null and noticeTitle != ''">#{noticeTitle}, </if>
			<if test="noticeType != null and noticeType != ''">#{noticeType}, </if>
			<if test="noticeContent != null and noticeContent != ''">#{noticeContent}, </if>
			<if test="status != null and status != ''">#{status}, </if>
			<if test="userIds != null and userIds != ''">#{userIds}, </if>
			<if test="remark != null and remark != ''">#{remark},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			sysdate()
		)
    </insert>

    <update id="updateNotice" parameterType="SysNotice">
        update sys_notice
        <set>
            <if test="noticeTitle != null and noticeTitle != ''">notice_title = #{noticeTitle}, </if>
            <if test="noticeType != null and noticeType != ''">notice_type = #{noticeType}, </if>
            <if test="noticeContent != null">notice_content = #{noticeContent}, </if>
            <if test="status != null and status != ''">status = #{status}, </if>
            <if test="weight != null and weight != ''">weight = #{weight}, </if>
            <if test="publishTime != null">publish_time = #{publishTime}, </if>
            <if test="userIds != null and userIds != ''">user_ids = #{userIds}, </if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			update_time = sysdate()
        </set>
        where notice_id = #{noticeId}
    </update>

    <delete id="deleteNoticeById" parameterType="Long">
        delete from sys_notice where notice_id = #{noticeId}
    </delete>

    <delete id="deleteNoticeByIds" parameterType="Long">
        delete from sys_notice where notice_id in
        <foreach item="noticeId" collection="array" open="(" separator="," close=")">
            #{noticeId}
        </foreach>
    </delete>

</mapper>